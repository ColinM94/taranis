import { keybinds } from 'config'

export type Bind =
  | 'controller:0'
  | 'controller:1'
  | 'controller:2'
  | 'controller:3'
  | 'controller:4'
  | 'controller:5'
  | 'controller:6'
  | 'controller:7'
  | 'controller:8'
  | 'controller:9'
  | 'controller:10'
  | 'controller:11'
  | 'controller:12'
  | 'controller:13'
  | 'controller:14'
  | 'controller:15'
  | 'mouse:0'
  | 'mouse:1'
  | 'mouse:2'
  | 'mouse:3'
  | 'mouse:4'
  | 'mouse:5'
  | 'mouse:6'
  | 'mouse:7'
  | 'keyboard:KeyA'
  | 'keyboard:KeyB'
  | 'keyboard:KeyC'
  | 'keyboard:KeyD'
  | 'keyboard:KeyE'
  | 'keyboard:KeyF'
  | 'keyboard:KeyG'
  | 'keyboard:KeyH'
  | 'keyboard:KeyI'
  | 'keyboard:KeyJ'
  | 'keyboard:KeyK'
  | 'keyboard:KeyL'
  | 'keyboard:KeyM'
  | 'keyboard:KeyN'
  | 'keyboard:KeyO'
  | 'keyboard:KeyP'
  | 'keyboard:KeyQ'
  | 'keyboard:KeyR'
  | 'keyboard:KeyS'
  | 'keyboard:KeyT'
  | 'keyboard:KeyU'
  | 'keyboard:KeyV'
  | 'keyboard:KeyW'
  | 'keyboard:KeyX'
  | 'keyboard:KeyY'
  | 'keyboard:KeyZ'
  | 'keyboard:Digit0'
  | 'keyboard:Digit1'
  | 'keyboard:Digit2'
  | 'keyboard:Digit3'
  | 'keyboard:Digit4'
  | 'keyboard:Digit5'
  | 'keyboard:Digit6'
  | 'keyboard:Digit7'
  | 'keyboard:Digit8'
  | 'keyboard:Digit9'
  | 'keyboard:Enter'
  | 'keyboard:Escape'
  | 'keyboard:Backspace'
  | 'keyboard:Tab'
  | 'keyboard:Space'
  | 'keyboard:ArrowUp'
  | 'keyboard:ArrowDown'
  | 'keyboard:ArrowLeft'
  | 'keyboard:ArrowRight'
  | 'keyboard:KeyÃŸ'
  | 'keyboard:Minus'
  | 'keyboard:Equal'
  | 'mouse:WheelDown'
  | 'mouse:WheelUp'

export interface Keybind {
  binds: Bind[]
  label: string
  isPressed?: boolean
  callbacks?: { [key: string]: (isPressed: boolean) => void }
  onPress?: (callback: () => void) => void
  rebindable?: boolean
  xAxis?: number
  yAxis?: number
}

export type Keybinds = Record<keyof typeof keybinds, Keybind>
